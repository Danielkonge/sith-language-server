{
    "name": "sith-language-server",
    "publisher": "LaBatata101",
    "description": "A Visual Studio Code extension for the Sith Language Server",
    "license": "MIT",
    "version": "0.1.0",
    "categories": [
        "Formatters",
        "Programming Languages"
    ],
    "keywords": [
        "language-server",
        "python",
        "LSP"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/LaBatata101/sith-language-server"
    },
    "engines": {
        "vscode": "^1.75.0"
    },
    "enabledApiProposals": [],
    "activationEvents": [
        "onLanguage:python",
        "workspaceContains:*.py"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "configuration": {
            "type": "object",
            "title": "SithLSP",
            "properties": {
                "sith-language-server.trace.server": {
                    "type": "string",
                    "scope": "window",
                    "enum": [
                        "off",
                        "messages",
                        "verbose"
                    ],
                    "default": "off",
                    "description": "Traces the communication between VS Code and the language server."
                },
                "sith.logLevel": {
                    "default": null,
                    "markdownDescription": "Controls the log level of the language server.",
                    "enum": [
                        "error",
                        "warning",
                        "info",
                        "debug",
                        "trace"
                    ],
                    "scope": "window",
                    "type": "string"
                },
                "sith.logFile": {
                    "default": null,
                    "markdownDescription": "Path to the log file for the language server.",
                    "scope": "window",
                    "type": "string"
                },
                "sith.executable": {
                    "default": "sith-lsp",
                    "description": "Path to the language server executable.",
                    "type": "string"
                },
                "sith.interpreter": {
                    "default": null,
                    "markdownDescription": "Path to a Python interpreter to use to run the LSP server.",
                    "scope": "resource",
                    "type": "string"
                },
                "sith.ruff.path": {
                    "default": null,
                    "markdownDescription": "Path to the `ruff` executable, e.g., `[\"/path/to/ruff\"]`.",
                    "scope": "resource",
                    "type": "string"
                },
                "sith.ruff.format.enable": {
                    "default": true,
                    "markdownDescription": "Whether to enable Ruff formatting.",
                    "scope": "window",
                    "type": "boolean"
                },
                "sith.ruff.format.args": {
                    "default": [],
                    "markdownDescription": "Additional command-line arguments to pass to `ruff format`, e.g., `\"args\": [\"--config=/path/to/pyproject.toml\"]`. Supports a subset of Ruff's command-line arguments, ignoring those that are required to operate the LSP, like `--force-exclude` and `--verbose`.",
                    "scope": "resource",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sith.ruff.lint.enable": {
                    "default": true,
                    "markdownDescription": "Whether to enable Ruff linting.",
                    "scope": "window",
                    "type": "boolean"
                },
                "sith.ruff.lint.args": {
                    "default": [],
                    "markdownDescription": "Additional command-line arguments to pass to `ruff check`, e.g., `\"args\": [\"--config=/path/to/pyproject.toml\"]`. Supports a subset of Ruff's command-line arguments, ignoring those that are required to operate the LSP, like `--force-exclude` and `--verbose`.",
                    "scope": "resource",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sith.ruff.lint.select": {
                    "default": null,
                    "markdownDescription": "Set rule codes to enable. Use `ALL` to enable all rules. See [the documentation](https://docs.astral.sh/ruff/settings/#lint_select) for more details.",
                    "examples": [
                        [
                            "E4",
                            "E7",
                            "E9",
                            "F"
                        ]
                    ],
                    "items": {
                        "type": "string"
                    },
                    "scope": "resource",
                    "type": "array"
                },
                "sith.ruff.lint.extendSelect": {
                    "default": null,
                    "markdownDescription": "Enable additional rule codes on top of existing configuration, instead of overriding it. Use `ALL` to enable all rules.",
                    "items": {
                        "type": "string"
                    },
                    "scope": "resource",
                    "type": "array"
                },
                "sith.ruff.lint.ignore": {
                    "default": null,
                    "markdownDescription": "Set rule codes to disable. See [the documentation](https://docs.astral.sh/ruff/settings/#lint_ignore) for more details.",
                    "items": {
                        "type": "string"
                    },
                    "scope": "resource",
                    "type": "array"
                }
            }
        }
    },
    "scripts": {
        "postinstall": "cd client && npm i",
        "vscode:prepublish": "npm run esbuild-base -- --minify",
        "esbuild-base": "esbuild ./client/src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
        "esbuild": "npm run esbuild-base -- --sourcemap",
        "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
        "test-compile": "tsc -p ./",
        "compile": "cross-env NODE_ENV=production tsc -b",
        "watch": "rm -rf dist && tsc -b -w",
        "lint": "eslint src --ext ts",
        "pretest": "npm run compile && npm run lint",
        "test": "node ./out/test/runTest.js",
        "build": "webpack --config webpack.config.js",
        "package": "vsce package --no-dependencies",
        "publish": "vsce publish --no-dependencies"
    },
    "devDependencies": {
        "@electron/rebuild": "^3.6.0",
        "@types/fs-extra": "^11.0.4",
        "@types/glob": "^7.1.3",
        "@types/mocha": "^8.0.0",
        "@types/node": "^12.12.0",
        "@types/vscode": "^1.44.0",
        "@types/which": "^3.0.4",
        "@typescript-eslint/eslint-plugin": "^3.8.0",
        "@typescript-eslint/parser": "^3.8.0",
        "cross-env": "^7.0.2",
        "esbuild": "^0.15.10",
        "eslint": "^7.6.0",
        "glob": "^7.1.7",
        "mocha": "^11.1.0",
        "typescript": "^4.4.3",
        "vscode-test": "^1.4.0",
        "vscode-uri": "^3.0.2",
        "webpack": "^5.94.0"
    },
    "dependencies": {
        "fs-extra": "^11.1.1",
        "vscode-languageclient": "^8.1.0",
        "which": "^4.0.0"
    }
}
