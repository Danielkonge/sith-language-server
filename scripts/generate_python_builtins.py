import builtins
import sys
from pathlib import Path

PATH = Path("crates") / "semantic_model" / "src" / "builtins.rs"


stdlib_modules = sorted(sys.stdlib_module_names)
builtin_symbols = dir(builtins)

with PATH.open("w") as f:
    f.write(
        """\
//! This file is generated by `scripts/generate_python_builtins.py`

/// A list of all Python builtin symbols.
pub const BUILTIN_SYMBOLS: &[&str] = &[
"""
    )

    for builtin_symbol in builtin_symbols:
        f.write(f'    "{builtin_symbol}",\n')

    f.write("];\n\n")

    f.write(
        """\
/// A list of all Python standard library modules.
pub const BUILTIN_MODULES: &[&str] = &[
"""
    )

    for std_module in stdlib_modules:
        f.write(f'    "{std_module}",\n')

    f.write("];\n\n")
    f.write(
        """\
/// A list of all Python keywords.
pub const BUILTIN_KEYWORDS: &[&str] = &[
    "False", "None", "True", "and", "as", "assert", "async", "await", "break", "class", "continue",
    "def", "del", "elif", "else", "except", "finally", "for", "from", "global", "if", "import",
    "in", "is", "lambda", "nonlocal", "not", "or", "pass", "raise", "return", "try", "while",
    "with", "yield", "match", "case", "type",
];
"""
    )
